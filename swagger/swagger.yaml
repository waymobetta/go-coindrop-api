consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  Standard_error:
    description: A standard error response (default view)
    example:
      code: 400
      message: Bad Request
    properties:
      code:
        description: A code that describes the error
        example: 400
        format: int64
        type: integer
      message:
        description: A message that describes the error
        example: Bad Request
        type: string
    required:
    - code
    - message
    title: 'Mediatype identifier: application/standard_error+json; view=default'
    type: object
  User:
    description: A user (default view)
    example:
      id: 7626296731781855290
      name: Facere voluptates.
    properties:
      id:
        description: Unique user ID
        example: 7626296731781855290
        format: int64
        type: integer
      name:
        description: Name of user
        example: Facere voluptates.
        type: string
    required:
    - id
    - name
    title: 'Mediatype identifier: application/vnd.user+json; view=default'
    type: object
host: localhost:8080
info:
  description: A simple goa service
  title: The Coindrop API
  version: ""
paths:
  /v1/users:
    post:
      description: Create a new user
      operationId: user#create
      parameters:
      - description: Cognito Auth User ID
        in: query
        name: authUserID
        required: false
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      summary: create user
      tags:
      - user
  /v1/users/{userID}:
    get:
      description: Get user by id
      operationId: user#show
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "404":
          description: Not Found
      schemes:
      - http
      summary: show user
      tags:
      - user
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  NotFound:
    description: Not Found
  OK:
    description: OK
    schema:
      $ref: '#/definitions/User'
schemes:
- http
swagger: "2.0"
