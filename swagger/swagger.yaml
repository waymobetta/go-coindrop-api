consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  AssignERC721Payload:
    description: AssignERC721 payload
    example:
      badgeId: 9302608f-f6a4-4004-b088-63e5fb43cc26
      userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
      walletAddress: 0x845fdD93Cca3aE9e380d5556818e6d0b902B977c
    properties:
      badgeId:
        description: Badge ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
      userId:
        description: User ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
      walletAddress:
        description: Wallet address
        example: 0x845fdD93Cca3aE9e380d5556818e6d0b902B977c
        pattern: ^0x[0-9a-fA-F]{40}$
        type: string
    required:
    - badgeId
    - userId
    - walletAddress
    title: AssignERC721Payload
    type: object
  Badge:
    description: Badge (default view)
    example:
      description: Eaque facere voluptates consequatur nihil odit.
      id: Quam quae aut cumque consequatur asperiores.
      logoURL: Hic illum veniam magni nam perferendis.
      name: Quis ut unde aliquam voluptatibus.
      project: Aspernatur iure amet tenetur non ut.
    properties:
      description:
        description: badge description
        example: Eaque facere voluptates consequatur nihil odit.
        type: string
      id:
        description: badge ID
        example: Quam quae aut cumque consequatur asperiores.
        type: string
      logoURL:
        description: badge logo
        example: Hic illum veniam magni nam perferendis.
        type: string
      name:
        description: badge name
        example: Quis ut unde aliquam voluptatibus.
        type: string
      project:
        description: badge project
        example: Aspernatur iure amet tenetur non ut.
        type: string
    required:
    - id
    - name
    - project
    - description
    - logoURL
    title: 'Mediatype identifier: application/vnd.badge+json; view=default'
    type: object
  BadgeCollection:
    description: BadgeCollection is the media type for an array of Badge (default
      view)
    example:
    - description: Eaque facere voluptates consequatur nihil odit.
      id: Quam quae aut cumque consequatur asperiores.
      logoURL: Hic illum veniam magni nam perferendis.
      name: Quis ut unde aliquam voluptatibus.
      project: Aspernatur iure amet tenetur non ut.
    items:
      $ref: '#/definitions/Badge'
    title: 'Mediatype identifier: application/vnd.badge+json; type=collection; view=default'
    type: array
  Badges:
    description: Badges (default view)
    example:
      badges:
      - description: Eaque facere voluptates consequatur nihil odit.
        id: Quam quae aut cumque consequatur asperiores.
        logoURL: Hic illum veniam magni nam perferendis.
        name: Quis ut unde aliquam voluptatibus.
        project: Aspernatur iure amet tenetur non ut.
    properties:
      badges:
        $ref: '#/definitions/BadgeCollection'
    required:
    - badges
    title: 'Mediatype identifier: application/vnd.badges+json; view=default'
    type: object
  ClaimPayload:
    description: Claim payload
    example:
      taskId: Sunt quas repudiandae.
      userId: Similique dolorem repellendus quas eligendi ut est.
    properties:
      taskId:
        description: Task ID
        example: Sunt quas repudiandae.
        type: string
      userId:
        description: User ID
        example: Similique dolorem repellendus quas eligendi ut est.
        type: string
    required:
    - userId
    - taskId
    title: ClaimPayload
    type: object
  Community:
    description: Community Object (default view)
    example:
      name: Fugit eaque reiciendis autem.
      reputation: 4965089573172075729
    properties:
      name:
        description: Community name
        example: Fugit eaque reiciendis autem.
        type: string
      reputation:
        description: Calculated reputation/karma
        example: 4965089573172075729
        format: int64
        type: integer
    required:
    - name
    - reputation
    title: 'Mediatype identifier: application/vnd.community+json; view=default'
    type: object
  CommunityCollection:
    description: CommunityCollection is the media type for an array of Community (default
      view)
    example:
    - name: Fugit eaque reiciendis autem.
      reputation: 4965089573172075729
    - name: Fugit eaque reiciendis autem.
      reputation: 4965089573172075729
    - name: Fugit eaque reiciendis autem.
      reputation: 4965089573172075729
    items:
      $ref: '#/definitions/Community'
    title: 'Mediatype identifier: application/vnd.community+json; type=collection;
      view=default'
    type: array
  CreateBadgePayload:
    description: Create Badge payload
    example:
      description: Similique quae molestiae.
      logoURL: Iusto doloremque quia.
      name: In porro neque sunt repellendus ullam ut.
    properties:
      description:
        description: Badge description
        example: Similique quae molestiae.
        type: string
      logoURL:
        description: Badge logo URL
        example: Iusto doloremque quia.
        type: string
      name:
        description: Badge name
        example: In porro neque sunt repellendus ullam ut.
        type: string
    required:
    - name
    - description
    - logoURL
    title: CreateBadgePayload
    type: object
  CreateStackOverflowUserPayload:
    description: Create Stack Overflow User payload
    example:
      stackUserId: 2848341519588161418
      userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
    properties:
      stackUserId:
        description: Stack Overflow Community-Specific Account ID
        example: 2848341519588161418
        format: int64
        type: integer
      userId:
        description: User ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
    required:
    - userId
    - stackUserId
    title: CreateStackOverflowUserPayload
    type: object
  CreateTaskPayload:
    description: Create Task payload
    example:
      taskId: Assumenda ipsa laborum non quis.
      userId: Aut quia totam esse illum earum eum.
    properties:
      taskId:
        description: Task ID
        example: Assumenda ipsa laborum non quis.
        type: string
      userId:
        description: User ID
        example: Aut quia totam esse illum earum eum.
        type: string
    required:
    - userId
    - taskId
    title: CreateTaskPayload
    type: object
  CreateUserPayload:
    description: Create Reddit User payload
    example:
      userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
      username: Vero non beatae ea aliquid accusamus quia.
    properties:
      userId:
        description: User ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
      username:
        description: Username
        example: Vero non beatae ea aliquid accusamus quia.
        type: string
    required:
    - userId
    - username
    title: CreateUserPayload
    type: object
  Erc721:
    description: ERC721 (default view)
    example:
      contractAddress: Labore autem et non et.
      tokenId: Officiis odit vero eum.
      totalMinted: 8490743513878251515
    properties:
      contractAddress:
        description: contract address
        example: Labore autem et non et.
        type: string
      tokenId:
        description: token ID
        example: Officiis odit vero eum.
        type: string
      totalMinted:
        description: total number minted
        example: 8490743513878251515
        format: int64
        type: integer
    required:
    - tokenId
    - contractAddress
    - totalMinted
    title: 'Mediatype identifier: application/vnd.erc721+json; view=default'
    type: object
  Erc721lookup:
    description: ERC721 Lookup (default view)
    example:
      erc721:
        contractAddress: Labore autem et non et.
        tokenId: Officiis odit vero eum.
        totalMinted: 8490743513878251515
      task:
        author: Rerum saepe adipisci.
        badge:
          description: Eaque facere voluptates consequatur nihil odit.
          id: Quam quae aut cumque consequatur asperiores.
          logoURL: Hic illum veniam magni nam perferendis.
          name: Quis ut unde aliquam voluptatibus.
          project: Aspernatur iure amet tenetur non ut.
        completed: true
        description: Velit quos rerum et natus est et.
        id: Labore id modi ut omnis deleniti.
        logoURL: Aut exercitationem omnis illum.
        resourceId: Itaque quam sit nihil deleniti.
        resourceURL: Dolore quas et.
        title: Eos quia repellat optio nam voluptatem.
        token: Ut qui dolores expedita est.
        tokenAllocation: 2154807424403512380
        type: Ipsum iusto ad quia autem sed et.
    properties:
      erc721:
        $ref: '#/definitions/Erc721'
      task:
        $ref: '#/definitions/Task'
    required:
    - erc721
    - task
    title: 'Mediatype identifier: application/vnd.erc721lookup+json; view=default'
    type: object
  Healthcheck:
    description: Health check (default view)
    example:
      status: Earum deserunt nobis modi eos possimus.
    properties:
      status:
        description: Status
        example: Earum deserunt nobis modi eos possimus.
        type: string
    required:
    - status
    title: 'Mediatype identifier: application/vnd.healthcheck+json; view=default'
    type: object
  Profile:
    description: A user profile (default view)
    example:
      id: Ipsa magni.
      name: Debitis qui quos atque.
      username: Excepturi non voluptas dolor eligendi ipsum eius.
    properties:
      id:
        description: Unique user ID
        example: Ipsa magni.
        type: string
      name:
        description: Name
        example: Debitis qui quos atque.
        type: string
      username:
        description: Username
        example: Excepturi non voluptas dolor eligendi ipsum eius.
        type: string
    required:
    - id
    - name
    - username
    title: 'Mediatype identifier: application/vnd.profile+json; view=default'
    type: object
  ProfilePayload:
    description: Profile payload
    example:
      name: Autem voluptas doloribus molestiae unde unde rerum.
      username: Iste voluptas.
    properties:
      name:
        description: Name
        example: Autem voluptas doloribus molestiae unde unde rerum.
        type: string
      username:
        description: Username
        example: Iste voluptas.
        type: string
    required:
    - name
    - username
    title: ProfilePayload
    type: object
  Publicbadges:
    description: Public Badges (default view)
    example:
      badges:
      - description: Eaque facere voluptates consequatur nihil odit.
        id: Quam quae aut cumque consequatur asperiores.
        logoURL: Hic illum veniam magni nam perferendis.
        name: Quis ut unde aliquam voluptatibus.
        project: Aspernatur iure amet tenetur non ut.
      redditUsername: Sint sunt voluptatum recusandae facilis perferendis consectetur.
      stackUserId: 3120674769674414976
    properties:
      badges:
        $ref: '#/definitions/BadgeCollection'
      redditUsername:
        description: Reddit username
        example: Sint sunt voluptatum recusandae facilis perferendis consectetur.
        type: string
      stackUserId:
        description: Stack Overflow user ID
        example: 3120674769674414976
        format: int64
        type: integer
    required:
    - redditUsername
    - stackUserId
    - badges
    title: 'Mediatype identifier: application/vnd.publicbadges+json; view=default'
    type: object
  Quiz:
    description: Quiz (default view)
    example:
      fields:
      - answer: Enim mollitia officiis.
        question: Quis sit exercitationem dignissimos.
      - answer: Enim mollitia officiis.
        question: Quis sit exercitationem dignissimos.
      - answer: Enim mollitia officiis.
        question: Quis sit exercitationem dignissimos.
      id: Dolores sequi.
      title: Fugiat dolorum accusantium eos accusantium.
      userId: At eligendi sit sed nobis.
    properties:
      fields:
        $ref: '#/definitions/Quiz-FieldsCollection'
      id:
        description: Quiz ID
        example: Dolores sequi.
        type: string
      title:
        description: Quiz title
        example: Fugiat dolorum accusantium eos accusantium.
        type: string
      userId:
        description: Quiz user ID
        example: At eligendi sit sed nobis.
        type: string
    required:
    - id
    - title
    - userId
    - fields
    title: 'Mediatype identifier: application/vnd.quiz+json; view=default'
    type: object
  Quiz-Fields:
    description: Quiz fields (default view)
    example:
      answer: Enim mollitia officiis.
      question: Quis sit exercitationem dignissimos.
    properties:
      answer:
        description: Answer
        example: Enim mollitia officiis.
        type: string
      question:
        description: Question
        example: Quis sit exercitationem dignissimos.
        type: string
    required:
    - question
    - answer
    title: 'Mediatype identifier: application/vnd.quiz-fields+json; view=default'
    type: object
  Quiz-FieldsCollection:
    description: Quiz-FieldsCollection is the media type for an array of Quiz-Fields
      (default view)
    example:
    - answer: Enim mollitia officiis.
      question: Quis sit exercitationem dignissimos.
    - answer: Enim mollitia officiis.
      question: Quis sit exercitationem dignissimos.
    items:
      $ref: '#/definitions/Quiz-Fields'
    title: 'Mediatype identifier: application/vnd.quiz-fields+json; type=collection;
      view=default'
    type: array
  QuizCollection:
    description: QuizCollection is the media type for an array of Quiz (default view)
    example:
    - fields:
      - answer: Enim mollitia officiis.
        question: Quis sit exercitationem dignissimos.
      - answer: Enim mollitia officiis.
        question: Quis sit exercitationem dignissimos.
      - answer: Enim mollitia officiis.
        question: Quis sit exercitationem dignissimos.
      id: Dolores sequi.
      title: Fugiat dolorum accusantium eos accusantium.
      userId: At eligendi sit sed nobis.
    items:
      $ref: '#/definitions/Quiz'
    title: 'Mediatype identifier: application/vnd.quiz+json; type=collection; view=default'
    type: array
  QuizPayload:
    description: Quiz payload
    example:
      title: Enim vel.
    properties:
      title:
        description: Title
        example: Enim vel.
        type: string
    required:
    - title
    title: QuizPayload
    type: object
  QuizResultsPayload:
    description: Quiz results payload
    example:
      questionsCorrect: 7067114288712034626
      questionsIncorrect: 5326539124903331576
      quizId: Sed non.
      userId: Voluptatem molestiae nam asperiores.
    properties:
      questionsCorrect:
        description: Number of questions that were answered correct
        example: 7067114288712034626
        format: int64
        type: integer
      questionsIncorrect:
        description: Number of questions that were answered incorrect
        example: 5326539124903331576
        format: int64
        type: integer
      quizId:
        description: Quiz ID
        example: Sed non.
        type: string
      userId:
        description: User ID
        example: Voluptatem molestiae nam asperiores.
        type: string
    required:
    - quizId
    - userId
    - questionsCorrect
    - questionsIncorrect
    title: QuizResultsPayload
    type: object
  Reddittargeting:
    description: Reddit Targeting (default view)
    example:
      users:
      - commentKarma: 399457654186110405
        id: 9302608f-f6a4-4004-b088-63e5fb43cc26
        linkKarma: 1439003262642310276
        subreddits:
        - name: Fugit eaque reiciendis autem.
          reputation: 4965089573172075729
        trophies:
        - Quia amet reiciendis velit.
        - Quia amet reiciendis velit.
        - Quia amet reiciendis velit.
        userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
        username: Natus neque pariatur reprehenderit officiis eos.
        verification:
          confirmedVerificationCode: Sit amet non voluptatem id.
          postedVerificationCode: Sit et molestias sed possimus enim et.
          verified: false
      - commentKarma: 399457654186110405
        id: 9302608f-f6a4-4004-b088-63e5fb43cc26
        linkKarma: 1439003262642310276
        subreddits:
        - name: Fugit eaque reiciendis autem.
          reputation: 4965089573172075729
        trophies:
        - Quia amet reiciendis velit.
        - Quia amet reiciendis velit.
        - Quia amet reiciendis velit.
        userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
        username: Natus neque pariatur reprehenderit officiis eos.
        verification:
          confirmedVerificationCode: Sit amet non voluptatem id.
          postedVerificationCode: Sit et molestias sed possimus enim et.
          verified: false
      - commentKarma: 399457654186110405
        id: 9302608f-f6a4-4004-b088-63e5fb43cc26
        linkKarma: 1439003262642310276
        subreddits:
        - name: Fugit eaque reiciendis autem.
          reputation: 4965089573172075729
        trophies:
        - Quia amet reiciendis velit.
        - Quia amet reiciendis velit.
        - Quia amet reiciendis velit.
        userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
        username: Natus neque pariatur reprehenderit officiis eos.
        verification:
          confirmedVerificationCode: Sit amet non voluptatem id.
          postedVerificationCode: Sit et molestias sed possimus enim et.
          verified: false
    properties:
      users:
        $ref: '#/definitions/ReddituserCollection'
    required:
    - users
    title: 'Mediatype identifier: application/vnd.reddittargeting+json; view=default'
    type: object
  Reddituser:
    description: A Reddit User (default view)
    example:
      commentKarma: 399457654186110405
      id: 9302608f-f6a4-4004-b088-63e5fb43cc26
      linkKarma: 1439003262642310276
      subreddits:
      - name: Fugit eaque reiciendis autem.
        reputation: 4965089573172075729
      trophies:
      - Quia amet reiciendis velit.
      - Quia amet reiciendis velit.
      - Quia amet reiciendis velit.
      userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
      username: Natus neque pariatur reprehenderit officiis eos.
      verification:
        confirmedVerificationCode: Sit amet non voluptatem id.
        postedVerificationCode: Sit et molestias sed possimus enim et.
        verified: false
    properties:
      commentKarma:
        description: Comment Karma
        example: 399457654186110405
        format: int64
        type: integer
      id:
        description: ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
      linkKarma:
        description: Link Karma
        example: 1439003262642310276
        format: int64
        type: integer
      subreddits:
        $ref: '#/definitions/CommunityCollection'
      trophies:
        description: User trophies
        example:
        - Quia amet reiciendis velit.
        - Quia amet reiciendis velit.
        - Quia amet reiciendis velit.
        items:
          example: Quia amet reiciendis velit.
          type: string
        type: array
      userId:
        description: User ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
      username:
        description: Username
        example: Natus neque pariatur reprehenderit officiis eos.
        type: string
      verification:
        $ref: '#/definitions/Verification'
    required:
    - id
    - userId
    - username
    - linkKarma
    - commentKarma
    - trophies
    - subreddits
    - verification
    title: 'Mediatype identifier: application/vnd.reddituser+json; view=default'
    type: object
  ReddituserCollection:
    description: ReddituserCollection is the media type for an array of Reddituser
      (default view)
    example:
    - commentKarma: 399457654186110405
      id: 9302608f-f6a4-4004-b088-63e5fb43cc26
      linkKarma: 1439003262642310276
      subreddits:
      - name: Fugit eaque reiciendis autem.
        reputation: 4965089573172075729
      trophies:
      - Quia amet reiciendis velit.
      - Quia amet reiciendis velit.
      - Quia amet reiciendis velit.
      userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
      username: Natus neque pariatur reprehenderit officiis eos.
      verification:
        confirmedVerificationCode: Sit amet non voluptatem id.
        postedVerificationCode: Sit et molestias sed possimus enim et.
        verified: false
    - commentKarma: 399457654186110405
      id: 9302608f-f6a4-4004-b088-63e5fb43cc26
      linkKarma: 1439003262642310276
      subreddits:
      - name: Fugit eaque reiciendis autem.
        reputation: 4965089573172075729
      trophies:
      - Quia amet reiciendis velit.
      - Quia amet reiciendis velit.
      - Quia amet reiciendis velit.
      userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
      username: Natus neque pariatur reprehenderit officiis eos.
      verification:
        confirmedVerificationCode: Sit amet non voluptatem id.
        postedVerificationCode: Sit et molestias sed possimus enim et.
        verified: false
    - commentKarma: 399457654186110405
      id: 9302608f-f6a4-4004-b088-63e5fb43cc26
      linkKarma: 1439003262642310276
      subreddits:
      - name: Fugit eaque reiciendis autem.
        reputation: 4965089573172075729
      trophies:
      - Quia amet reiciendis velit.
      - Quia amet reiciendis velit.
      - Quia amet reiciendis velit.
      userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
      username: Natus neque pariatur reprehenderit officiis eos.
      verification:
        confirmedVerificationCode: Sit amet non voluptatem id.
        postedVerificationCode: Sit et molestias sed possimus enim et.
        verified: false
    items:
      $ref: '#/definitions/Reddituser'
    title: 'Mediatype identifier: application/vnd.reddituser+json; type=collection;
      view=default'
    type: array
  Results:
    description: Quiz results (default view)
    example:
      questionsCorrect: 5883414777953173127
      questionsIncorrect: 2844279069912922670
      quizId: Tempora maiores assumenda.
      userId: Distinctio quo blanditiis perferendis et facilis aspernatur.
    properties:
      questionsCorrect:
        description: Count of correct quiz answers
        example: 5883414777953173127
        format: int64
        type: integer
      questionsIncorrect:
        description: Count of incorrect quiz answers
        example: 2844279069912922670
        format: int64
        type: integer
      quizId:
        description: Quiz ID
        example: Tempora maiores assumenda.
        type: string
      userId:
        description: User ID
        example: Distinctio quo blanditiis perferendis et facilis aspernatur.
        type: string
    required:
    - userId
    - quizId
    - questionsCorrect
    - questionsIncorrect
    title: 'Mediatype identifier: application/vnd.results+json; view=default'
    type: object
  ResultsCollection:
    description: ResultsCollection is the media type for an array of Results (default
      view)
    example:
    - questionsCorrect: 5883414777953173127
      questionsIncorrect: 2844279069912922670
      quizId: Tempora maiores assumenda.
      userId: Distinctio quo blanditiis perferendis et facilis aspernatur.
    items:
      $ref: '#/definitions/Results'
    title: 'Mediatype identifier: application/vnd.results+json; type=collection; view=default'
    type: array
  SetTargetingPayload:
    description: Set Targeting payload
    example:
      taskId: Enim ducimus asperiores et omnis est quaerat.
      users: Corporis officiis maxime id suscipit.
    properties:
      taskId:
        description: Task ID
        example: Enim ducimus asperiores et omnis est quaerat.
        type: string
      users:
        description: List of users
        example: Corporis officiis maxime id suscipit.
        type: string
    required:
    - taskId
    - users
    title: SetTargetingPayload
    type: object
  Stackoverflowuser:
    description: Stack Overflow User Info (default view)
    example:
      accounts:
      - name: Fugit eaque reiciendis autem.
        reputation: 4965089573172075729
      - name: Fugit eaque reiciendis autem.
        reputation: 4965089573172075729
      - name: Fugit eaque reiciendis autem.
        reputation: 4965089573172075729
      displayName: Unde aut molestiae praesentium debitis ut.
      exchangeAccountId: 2922008210910813631
      id: 9302608f-f6a4-4004-b088-63e5fb43cc26
      stackUserId: 6459152547384194035
      userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
      verification:
        confirmedVerificationCode: Sit amet non voluptatem id.
        postedVerificationCode: Sit et molestias sed possimus enim et.
        verified: false
    properties:
      accounts:
        $ref: '#/definitions/CommunityCollection'
      displayName:
        description: Display Name
        example: Unde aut molestiae praesentium debitis ut.
        type: string
      exchangeAccountId:
        description: Stack Exchange Account ID
        example: 2922008210910813631
        format: int64
        type: integer
      id:
        description: ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
      stackUserId:
        description: Stack Overflow Community-Specific Account ID
        example: 6459152547384194035
        format: int64
        type: integer
      userId:
        description: User ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
      verification:
        $ref: '#/definitions/Verification'
    required:
    - id
    - userId
    - exchangeAccountId
    - stackUserId
    - displayName
    - accounts
    - verification
    title: 'Mediatype identifier: application/vnd.stackoverflowuser+json; view=default'
    type: object
  Standard_error:
    description: A standard error response (default view)
    example:
      code: 400
      message: Bad Request
    properties:
      code:
        description: A code that describes the error
        example: 400
        format: int64
        type: integer
      message:
        description: A message that describes the error
        example: Bad Request
        type: string
    required:
    - code
    - message
    title: 'Mediatype identifier: application/standard_error+json; view=default'
    type: object
  Targeting:
    description: Targeting (default view)
    example:
      users: Iure qui consequatur.
    properties:
      users:
        description: List of users
        example: Iure qui consequatur.
        type: string
    required:
    - users
    title: 'Mediatype identifier: application/vnd.targeting+json; view=default'
    type: object
  Task:
    description: Task (default view)
    example:
      author: Rerum saepe adipisci.
      badge:
        description: Eaque facere voluptates consequatur nihil odit.
        id: Quam quae aut cumque consequatur asperiores.
        logoURL: Hic illum veniam magni nam perferendis.
        name: Quis ut unde aliquam voluptatibus.
        project: Aspernatur iure amet tenetur non ut.
      completed: true
      description: Velit quos rerum et natus est et.
      id: Labore id modi ut omnis deleniti.
      logoURL: Aut exercitationem omnis illum.
      resourceId: Itaque quam sit nihil deleniti.
      resourceURL: Dolore quas et.
      title: Eos quia repellat optio nam voluptatem.
      token: Ut qui dolores expedita est.
      tokenAllocation: 2154807424403512380
      type: Ipsum iusto ad quia autem sed et.
    properties:
      author:
        description: task author
        example: Rerum saepe adipisci.
        type: string
      badge:
        $ref: '#/definitions/Badge'
      completed:
        description: task completed flag
        example: true
        type: boolean
      description:
        description: task description
        example: Velit quos rerum et natus est et.
        type: string
      id:
        description: task ID
        example: Labore id modi ut omnis deleniti.
        type: string
      logoURL:
        description: logo URL
        example: Aut exercitationem omnis illum.
        type: string
      resourceId:
        description: learning resource ID
        example: Itaque quam sit nihil deleniti.
        type: string
      resourceURL:
        description: learning resource URL
        example: Dolore quas et.
        type: string
      title:
        description: task title
        example: Eos quia repellat optio nam voluptatem.
        type: string
      token:
        description: task token
        example: Ut qui dolores expedita est.
        type: string
      tokenAllocation:
        description: token allocation
        example: 2154807424403512380
        format: int64
        type: integer
      type:
        description: task type
        example: Ipsum iusto ad quia autem sed et.
        type: string
    required:
    - id
    - title
    - type
    - author
    - description
    - token
    - tokenAllocation
    - badge
    - logoURL
    - resourceId
    - resourceURL
    - completed
    title: 'Mediatype identifier: application/vnd.task+json; view=default'
    type: object
  TaskCollection:
    description: TaskCollection is the media type for an array of Task (default view)
    example:
    - author: Rerum saepe adipisci.
      badge:
        description: Eaque facere voluptates consequatur nihil odit.
        id: Quam quae aut cumque consequatur asperiores.
        logoURL: Hic illum veniam magni nam perferendis.
        name: Quis ut unde aliquam voluptatibus.
        project: Aspernatur iure amet tenetur non ut.
      completed: true
      description: Velit quos rerum et natus est et.
      id: Labore id modi ut omnis deleniti.
      logoURL: Aut exercitationem omnis illum.
      resourceId: Itaque quam sit nihil deleniti.
      resourceURL: Dolore quas et.
      title: Eos quia repellat optio nam voluptatem.
      token: Ut qui dolores expedita est.
      tokenAllocation: 2154807424403512380
      type: Ipsum iusto ad quia autem sed et.
    - author: Rerum saepe adipisci.
      badge:
        description: Eaque facere voluptates consequatur nihil odit.
        id: Quam quae aut cumque consequatur asperiores.
        logoURL: Hic illum veniam magni nam perferendis.
        name: Quis ut unde aliquam voluptatibus.
        project: Aspernatur iure amet tenetur non ut.
      completed: true
      description: Velit quos rerum et natus est et.
      id: Labore id modi ut omnis deleniti.
      logoURL: Aut exercitationem omnis illum.
      resourceId: Itaque quam sit nihil deleniti.
      resourceURL: Dolore quas et.
      title: Eos quia repellat optio nam voluptatem.
      token: Ut qui dolores expedita est.
      tokenAllocation: 2154807424403512380
      type: Ipsum iusto ad quia autem sed et.
    items:
      $ref: '#/definitions/Task'
    title: 'Mediatype identifier: application/vnd.task+json; type=collection; view=default'
    type: array
  TaskPayload:
    description: Task payload
    example:
      completed: true
    properties:
      completed:
        description: Task completed
        example: true
        type: boolean
    required:
    - completed
    title: TaskPayload
    type: object
  Tasks:
    description: Tasks (default view)
    example:
      tasks:
      - author: Rerum saepe adipisci.
        badge:
          description: Eaque facere voluptates consequatur nihil odit.
          id: Quam quae aut cumque consequatur asperiores.
          logoURL: Hic illum veniam magni nam perferendis.
          name: Quis ut unde aliquam voluptatibus.
          project: Aspernatur iure amet tenetur non ut.
        completed: true
        description: Velit quos rerum et natus est et.
        id: Labore id modi ut omnis deleniti.
        logoURL: Aut exercitationem omnis illum.
        resourceId: Itaque quam sit nihil deleniti.
        resourceURL: Dolore quas et.
        title: Eos quia repellat optio nam voluptatem.
        token: Ut qui dolores expedita est.
        tokenAllocation: 2154807424403512380
        type: Ipsum iusto ad quia autem sed et.
      - author: Rerum saepe adipisci.
        badge:
          description: Eaque facere voluptates consequatur nihil odit.
          id: Quam quae aut cumque consequatur asperiores.
          logoURL: Hic illum veniam magni nam perferendis.
          name: Quis ut unde aliquam voluptatibus.
          project: Aspernatur iure amet tenetur non ut.
        completed: true
        description: Velit quos rerum et natus est et.
        id: Labore id modi ut omnis deleniti.
        logoURL: Aut exercitationem omnis illum.
        resourceId: Itaque quam sit nihil deleniti.
        resourceURL: Dolore quas et.
        title: Eos quia repellat optio nam voluptatem.
        token: Ut qui dolores expedita est.
        tokenAllocation: 2154807424403512380
        type: Ipsum iusto ad quia autem sed et.
    properties:
      tasks:
        $ref: '#/definitions/TaskCollection'
    required:
    - tasks
    title: 'Mediatype identifier: application/vnd.tasks+json; view=default'
    type: object
  Transaction:
    description: Transaction (default view)
    example:
      hash: Nemo eligendi consequuntur molestiae.
      id: Eius omnis.
      taskId: Sint reprehenderit repellendus ut aut.
      userId: Labore ut dolor odio sunt.
    properties:
      hash:
        description: transaction hash
        example: Nemo eligendi consequuntur molestiae.
        type: string
      id:
        description: transaction ID
        example: Eius omnis.
        type: string
      taskId:
        description: task ID
        example: Sint reprehenderit repellendus ut aut.
        type: string
      userId:
        description: user ID
        example: Labore ut dolor odio sunt.
        type: string
    required:
    - id
    - userId
    - taskId
    - hash
    title: 'Mediatype identifier: application/vnd.transaction+json; view=default'
    type: object
  TransactionCollection:
    description: TransactionCollection is the media type for an array of Transaction
      (default view)
    example:
    - hash: Nemo eligendi consequuntur molestiae.
      id: Eius omnis.
      taskId: Sint reprehenderit repellendus ut aut.
      userId: Labore ut dolor odio sunt.
    - hash: Nemo eligendi consequuntur molestiae.
      id: Eius omnis.
      taskId: Sint reprehenderit repellendus ut aut.
      userId: Labore ut dolor odio sunt.
    - hash: Nemo eligendi consequuntur molestiae.
      id: Eius omnis.
      taskId: Sint reprehenderit repellendus ut aut.
      userId: Labore ut dolor odio sunt.
    items:
      $ref: '#/definitions/Transaction'
    title: 'Mediatype identifier: application/vnd.transaction+json; type=collection;
      view=default'
    type: array
  Transactions:
    description: Transactions (default view)
    example:
      transactions:
      - hash: Nemo eligendi consequuntur molestiae.
        id: Eius omnis.
        taskId: Sint reprehenderit repellendus ut aut.
        userId: Labore ut dolor odio sunt.
      - hash: Nemo eligendi consequuntur molestiae.
        id: Eius omnis.
        taskId: Sint reprehenderit repellendus ut aut.
        userId: Labore ut dolor odio sunt.
      - hash: Nemo eligendi consequuntur molestiae.
        id: Eius omnis.
        taskId: Sint reprehenderit repellendus ut aut.
        userId: Labore ut dolor odio sunt.
    properties:
      transactions:
        $ref: '#/definitions/TransactionCollection'
    required:
    - transactions
    title: 'Mediatype identifier: application/vnd.transactions+json; view=default'
    type: object
  TypeformCalculatedPayload:
    description: Typeform calculatd data
    example:
      score: 1746822080599364554
    properties:
      score:
        description: Score
        example: 1746822080599364554
        format: int64
        type: integer
    title: TypeformCalculatedPayload
    type: object
  TypeformFormPayload:
    description: Typeform form data
    example:
      answers: 0.5980605041435555
      calculated:
        score: 1746822080599364554
      definition: 1263584531261615516
      form_id: Iste dolores voluptatem ex delectus.
      hidden:
        user_id: Rerum similique rerum libero numquam neque accusantium.
      landed_at: Aut est suscipit.
      submitted_at: Velit sunt quis totam corrupti ut.
      token: Aperiam labore voluptates inventore molestiae.
    properties:
      answers:
        description: Answers
        example: 0.5980605041435555
      calculated:
        $ref: '#/definitions/TypeformCalculatedPayload'
      definition:
        description: Definition
        example: 1263584531261615516
      form_id:
        description: Form ID
        example: Iste dolores voluptatem ex delectus.
        type: string
      hidden:
        $ref: '#/definitions/TypeformHiddenPayload'
      landed_at:
        description: Form ID
        example: Aut est suscipit.
        type: string
      submitted_at:
        description: Form ID
        example: Velit sunt quis totam corrupti ut.
        type: string
      token:
        description: Form ID
        example: Aperiam labore voluptates inventore molestiae.
        type: string
    title: TypeformFormPayload
    type: object
  TypeformHiddenPayload:
    description: Typeform hidden data
    example:
      user_id: Rerum similique rerum libero numquam neque accusantium.
    properties:
      user_id:
        description: User ID
        example: Rerum similique rerum libero numquam neque accusantium.
        type: string
    title: TypeformHiddenPayload
    type: object
  TypeformPayload:
    description: Typeform payload
    example:
      event_id: Magni quam sit ut eos accusantium.
      event_type: Aliquid architecto praesentium.
      form_response:
        answers: 0.5980605041435555
        calculated:
          score: 1746822080599364554
        definition: 1263584531261615516
        form_id: Iste dolores voluptatem ex delectus.
        hidden:
          user_id: Rerum similique rerum libero numquam neque accusantium.
        landed_at: Aut est suscipit.
        submitted_at: Velit sunt quis totam corrupti ut.
        token: Aperiam labore voluptates inventore molestiae.
    properties:
      event_id:
        description: Event ID
        example: Magni quam sit ut eos accusantium.
        type: string
      event_type:
        description: Event types
        example: Aliquid architecto praesentium.
        type: string
      form_response:
        $ref: '#/definitions/TypeformFormPayload'
    title: TypeformPayload
    type: object
  UpdateRedditUserPayload:
    description: Update Reddit User payload
    example:
      userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
      username: Itaque maxime.
    properties:
      userId:
        description: User ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
      username:
        description: Reddit Username
        example: Itaque maxime.
        type: string
    required:
    - userId
    - username
    title: UpdateRedditUserPayload
    type: object
  UpdateStackOverflowUserPayload:
    description: Update Stack Overflow User payload
    example:
      stackUserId: 2668369685922451484
      userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
    properties:
      stackUserId:
        description: Stack Overflow Community-Specific Account ID
        example: 2668369685922451484
        format: int64
        type: integer
      userId:
        description: User ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
    required:
    - userId
    - stackUserId
    title: UpdateStackOverflowUserPayload
    type: object
  User:
    description: A user (default view)
    example:
      cognitoAuthUserId: Nobis autem quis assumenda in.
      id: Laborum inventore iusto ducimus temporibus et.
      name: Non tenetur dolores culpa recusandae.
      walletAddress: Dolor culpa dignissimos.
    properties:
      cognitoAuthUserId:
        description: Cognito auth user ID
        example: Nobis autem quis assumenda in.
        type: string
      id:
        description: Unique user ID
        example: Laborum inventore iusto ducimus temporibus et.
        type: string
      name:
        description: Name of user
        example: Non tenetur dolores culpa recusandae.
        type: string
      walletAddress:
        description: Wallet address
        example: Dolor culpa dignissimos.
        type: string
    required:
    - id
    title: 'Mediatype identifier: application/vnd.user+json; view=default'
    type: object
  UserPayload:
    description: User payload
    example:
      cognitoAuthUserId: Hic et quod placeat consequatur veritatis eveniet.
    properties:
      cognitoAuthUserId:
        description: Cognito auth user ID
        example: Hic et quod placeat consequatur veritatis eveniet.
        type: string
    required:
    - cognitoAuthUserId
    title: UserPayload
    type: object
  Verification:
    description: Account Verification (default view)
    example:
      confirmedVerificationCode: Sit amet non voluptatem id.
      postedVerificationCode: Sit et molestias sed possimus enim et.
      verified: false
    properties:
      confirmedVerificationCode:
        description: Confirmed Verification Code
        example: Sit amet non voluptatem id.
        type: string
      postedVerificationCode:
        description: Posted Verification Code
        example: Sit et molestias sed possimus enim et.
        type: string
      verified:
        description: Account Verified Flag
        example: false
        type: boolean
    required:
    - postedVerificationCode
    - confirmedVerificationCode
    - verified
    title: 'Mediatype identifier: application/vnd.verification+json; view=default'
    type: object
  VerificationPayload:
    description: Social Account Verification Payload
    example:
      userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
    properties:
      userId:
        description: User ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
    required:
    - userId
    title: VerificationPayload
    type: object
  Wallet:
    description: A wallet (default view)
    example:
      address: Temporibus minus aut temporibus porro et.
      verified: false
      walletType: Sit ad commodi omnis omnis exercitationem consectetur.
    properties:
      address:
        description: wallet address
        example: Temporibus minus aut temporibus porro et.
        type: string
      verified:
        description: wallet verified flag
        example: false
        type: boolean
      walletType:
        description: wallet type
        example: Sit ad commodi omnis omnis exercitationem consectetur.
        type: string
    required:
    - address
    - walletType
    - verified
    title: 'Mediatype identifier: application/vnd.wallet+json; view=default'
    type: object
  WalletCollection:
    description: WalletCollection is the media type for an array of Wallet (default
      view)
    example:
    - address: Temporibus minus aut temporibus porro et.
      verified: false
      walletType: Sit ad commodi omnis omnis exercitationem consectetur.
    - address: Temporibus minus aut temporibus porro et.
      verified: false
      walletType: Sit ad commodi omnis omnis exercitationem consectetur.
    - address: Temporibus minus aut temporibus porro et.
      verified: false
      walletType: Sit ad commodi omnis omnis exercitationem consectetur.
    items:
      $ref: '#/definitions/Wallet'
    title: 'Mediatype identifier: application/vnd.wallet+json; type=collection; view=default'
    type: array
  WalletPayload:
    description: Wallet payload
    example:
      userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
      walletAddress: 0x845fdD93Cca3aE9e380d5556818e6d0b902B977c
      walletType: Nulla delectus.
    properties:
      userId:
        description: User ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
      walletAddress:
        description: Wallet address
        example: 0x845fdD93Cca3aE9e380d5556818e6d0b902B977c
        pattern: ^0x[0-9a-fA-F]{40}$
        type: string
      walletType:
        description: wallet type
        example: Nulla delectus.
        type: string
    required:
    - userId
    - walletAddress
    - walletType
    title: WalletPayload
    type: object
  WalletVerificationPayload:
    description: Wallet verification payload
    example:
      address: Sit aperiam et.
      message: Maxime est dolor voluptate qui.
      signature: Ipsam sed reprehenderit.
      taskId: 9302608f-f6a4-4004-b088-63e5fb43cc26
      userId: 9302608f-f6a4-4004-b088-63e5fb43cc26
      version: Atque quia repellendus.
    properties:
      address:
        description: Wallet address
        example: Sit aperiam et.
        type: string
      message:
        description: Message
        example: Maxime est dolor voluptate qui.
        type: string
      signature:
        description: Signature
        example: Ipsam sed reprehenderit.
        type: string
      taskId:
        description: Task ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
      userId:
        description: User ID
        example: 9302608f-f6a4-4004-b088-63e5fb43cc26
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        type: string
      version:
        description: Version
        example: Atque quia repellendus.
        type: string
    required:
    - userId
    - taskId
    - address
    - message
    - signature
    - version
    title: WalletVerificationPayload
    type: object
  Wallets:
    description: Wallets (default view)
    example:
      wallets:
      - address: Temporibus minus aut temporibus porro et.
        verified: false
        walletType: Sit ad commodi omnis omnis exercitationem consectetur.
    properties:
      wallets:
        $ref: '#/definitions/WalletCollection'
    required:
    - wallets
    title: 'Mediatype identifier: application/vnd.wallets+json; view=default'
    type: object
host: localhost:5000
info:
  description: A simple goa service
  title: The Coindrop API
  version: ""
paths:
  /v1/badges:
    get:
      description: Get all badges
      operationId: badges#show
      produces:
      - application/standard_error+json
      - application/vnd.badge+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BadgeCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: show badges
      tags:
      - badges
    post:
      description: Create a badge
      operationId: badges#create
      parameters:
      - description: Create Badge payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateBadgePayload'
      produces:
      - application/standard_error+json
      - application/vnd.badge+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Badge'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: create badges
      tags:
      - badges
  /v1/badges/{userId}:
    get:
      description: Get list of user badges
      operationId: badges#list
      parameters:
      - description: User ID
        in: path
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.badges+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Badges'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: list badges
      tags:
      - badges
  /v1/health:
    get:
      description: Returns OK if system is healthy
      operationId: healthcheck#show
      produces:
      - application/standard_error+json
      - application/vnd.healthcheck+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Healthcheck'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      summary: show healthcheck
      tags:
      - healthcheck
  /v1/internal/erc721/assign:
    post:
      description: Assign an ERC721 to a user
      operationId: erc721#assign
      parameters:
      - description: AssignERC721 payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/AssignERC721Payload'
      produces:
      - application/standard_error+json
      - application/vnd.erc721+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Erc721'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: assign erc721
      tags:
      - erc721
  /v1/internal/social/reddit/harvest/about:
    post:
      description: Update Reddit User About Info
      operationId: redditharvest#updateAbout
      parameters:
      - description: Update Reddit User payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateRedditUserPayload'
      produces:
      - application/standard_error+json
      - application/vnd.reddituser+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Reddituser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: updateAbout redditharvest
      tags:
      - redditharvest
  /v1/internal/social/reddit/harvest/submitted:
    post:
      description: Update Reddit User Submitted Info
      operationId: redditharvest#updateSubmittedInfo
      parameters:
      - description: Update Reddit User payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateRedditUserPayload'
      produces:
      - application/standard_error+json
      - application/vnd.reddituser+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Reddituser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: updateSubmittedInfo redditharvest
      tags:
      - redditharvest
  /v1/internal/social/reddit/harvest/trophies:
    post:
      description: Update Reddit User Trophy Info
      operationId: redditharvest#updateTrophies
      parameters:
      - description: Update Reddit User payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateRedditUserPayload'
      produces:
      - application/standard_error+json
      - application/vnd.reddituser+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Reddituser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: updateTrophies redditharvest
      tags:
      - redditharvest
  /v1/internal/social/stackoverflow/harvest/communities:
    post:
      description: Update Stack Overflow User Communities Info
      operationId: stackoverflowharvest#updateCommunities
      parameters:
      - description: Update Stack Overflow User payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateStackOverflowUserPayload'
      produces:
      - application/standard_error+json
      - application/vnd.stackoverflowuser+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Stackoverflowuser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: updateCommunities stackoverflowharvest
      tags:
      - stackoverflowharvest
  /v1/internal/social/stackoverflow/harvest/profile:
    post:
      description: Update Stack Overflow User Info
      operationId: stackoverflowharvest#updateProfile
      parameters:
      - description: Update Stack Overflow User payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UpdateStackOverflowUserPayload'
      produces:
      - application/standard_error+json
      - application/vnd.stackoverflowuser+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Stackoverflowuser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: updateProfile stackoverflowharvest
      tags:
      - stackoverflowharvest
  /v1/profiles:
    get:
      description: Get user profile
      operationId: profiles#list
      produces:
      - application/standard_error+json
      - application/vnd.profile+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: list profiles
      tags:
      - profiles
    post:
      description: Upsert a new profile
      operationId: profiles#create
      parameters:
      - description: Profile payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ProfilePayload'
      produces:
      - application/standard_error+json
      - application/vnd.profile+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: create profiles
      tags:
      - profiles
  /v1/profiles/{userId}:
    get:
      description: Get profile by user id
      operationId: profiles#show
      parameters:
      - in: path
        name: userId
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.profile+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: show profiles
      tags:
      - profiles
    post:
      description: Update profile
      operationId: profiles#update
      parameters:
      - in: path
        name: userId
        required: true
        type: string
      - description: Profile payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ProfilePayload'
      produces:
      - application/standard_error+json
      - application/vnd.profile+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: update profiles
      tags:
      - profiles
  /v1/public/badges/{redditUsername}:
    get:
      description: Get profile by Reddit username
      operationId: public#show
      parameters:
      - description: Reddit Username
        in: path
        name: redditUsername
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.publicbadges+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Publicbadges'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      summary: show public
      tags:
      - public
  /v1/public/tokens/{erc721TokenId}:
    get:
      description: Get profile by Reddit username
      operationId: public#display
      parameters:
      - description: Reddit Username
        in: path
        name: erc721TokenId
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.erc721lookup+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Erc721lookup'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      summary: display public
      tags:
      - public
  /v1/quizzes:
    get:
      description: Get quizzes
      operationId: quizzes#list
      produces:
      - application/standard_error+json
      - application/vnd.quiz+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/QuizCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: list quizzes
      tags:
      - quizzes
    post:
      description: Create quiz
      operationId: quizzes#create
      parameters:
      - description: Quiz payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/QuizPayload'
      produces:
      - application/standard_error+json
      - application/vnd.quiz+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Quiz'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: create quizzes
      tags:
      - quizzes
  /v1/quizzes/{quizId}:
    get:
      description: Get quizzes
      operationId: quizzes#show
      parameters:
      - description: Quiz ID
        in: path
        name: quizId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.quiz+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Quiz'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: show quizzes
      tags:
      - quizzes
  /v1/quizzes/{quizId}/results:
    get:
      description: Get quiz results
      operationId: results#show
      parameters:
      - description: Quiz ID
        in: path
        name: quizId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.results+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Results'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: show results
      tags:
      - results
  /v1/quizzes/results:
    get:
      description: Get all quiz results
      operationId: results#list
      produces:
      - application/standard_error+json
      - application/vnd.results+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ResultsCollection'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: list results
      tags:
      - results
    post:
      description: Add quiz results
      operationId: results#create
      parameters:
      - description: Quiz results payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/QuizResultsPayload'
      produces:
      - application/standard_error+json
      - application/vnd.results+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Results'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: create results
      tags:
      - results
  /v1/social/reddit:
    post:
      description: Update Reddit User
      operationId: reddit#update
      parameters:
      - description: Create Reddit User payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateUserPayload'
      produces:
      - application/standard_error+json
      - application/vnd.reddituser+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Reddituser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: update reddit
      tags:
      - reddit
  /v1/social/reddit/{userId}:
    get:
      description: Get Reddit User
      operationId: reddit#show
      parameters:
      - description: User ID
        in: path
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.reddituser+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Reddituser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: show reddit
      tags:
      - reddit
  /v1/social/reddit/{userId}/verify:
    get:
      description: Get Reddit Verification
      operationId: reddit#display
      parameters:
      - description: User ID
        in: path
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.verification+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Verification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: display reddit
      tags:
      - reddit
    post:
      description: Update Reddit Verification
      operationId: reddit#verify
      parameters:
      - description: User ID
        in: path
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      - description: Social Account Verification Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/VerificationPayload'
      produces:
      - application/standard_error+json
      - application/vnd.verification+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Verification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: verify reddit
      tags:
      - reddit
  /v1/social/stackoverflow:
    post:
      description: Update stack overflow user info
      operationId: stackoverflow#update
      parameters:
      - description: Create Stack Overflow User payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateStackOverflowUserPayload'
      produces:
      - application/standard_error+json
      - application/vnd.stackoverflowuser+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Stackoverflowuser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: update stackoverflow
      tags:
      - stackoverflow
  /v1/social/stackoverflow/{userId}:
    get:
      description: Get Stack Overflow User
      operationId: stackoverflow#show
      parameters:
      - description: User ID
        in: path
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.stackoverflowuser+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Stackoverflowuser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: show stackoverflow
      tags:
      - stackoverflow
  /v1/social/stackoverflow/{userId}/verify:
    get:
      description: Get Stack Overflow Verification
      operationId: stackoverflow#display
      parameters:
      - description: User ID
        in: path
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.verification+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Verification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: display stackoverflow
      tags:
      - stackoverflow
    post:
      description: Update Stack Overflow Verification
      operationId: stackoverflow#verify
      parameters:
      - description: User ID
        in: path
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      - description: Social Account Verification Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/VerificationPayload'
      produces:
      - application/standard_error+json
      - application/vnd.verification+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Verification'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: verify stackoverflow
      tags:
      - stackoverflow
  /v1/targeting/tasks/set:
    post:
      description: Set users as eligible
      operationId: targeting#set
      parameters:
      - description: Set Targeting payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SetTargetingPayload'
      produces:
      - application/standard_error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: set targeting
      tags:
      - targeting
  /v1/targeting/users/{project}:
    get:
      description: Get list of eligible users
      operationId: targeting#display
      parameters:
      - description: Project name
        in: path
        name: project
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.targeting+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Targeting'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: display targeting
      tags:
      - targeting
  /v1/targeting/users/reddit:
    get:
      description: Get list of all reddit users and their subreddits
      operationId: targeting#list
      produces:
      - application/standard_error+json
      - application/vnd.reddittargeting+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Reddittargeting'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: list targeting
      tags:
      - targeting
  /v1/tasks:
    get:
      description: Get list of user tasks
      operationId: tasks#list
      parameters:
      - description: User ID
        in: query
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: false
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.tasks+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Tasks'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: list tasks
      tags:
      - tasks
    post:
      description: Create a user task
      operationId: tasks#create
      parameters:
      - description: Create Task payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/CreateTaskPayload'
      produces:
      - application/standard_error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: create tasks
      tags:
      - tasks
  /v1/tasks/{taskId}:
    get:
      description: Get single task
      operationId: tasks#show
      parameters:
      - description: Task ID
        in: path
        name: taskId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.task+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: show tasks
      tags:
      - tasks
    post:
      description: Update user task state
      operationId: tasks#update
      parameters:
      - description: Task ID
        in: path
        name: taskId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      - description: Task payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/TaskPayload'
      produces:
      - application/standard_error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: update tasks
      tags:
      - tasks
  /v1/transactions/{userId}:
    get:
      description: Get list of user transactions
      operationId: transactions#list
      parameters:
      - description: User ID
        in: path
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.transactions+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Transactions'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: list transactions
      tags:
      - transactions
  /v1/transactions/claim:
    post:
      description: Claim
      operationId: transactions#claim
      parameters:
      - description: Task ID
        in: query
        name: taskId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: false
        type: string
      - description: Claim payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ClaimPayload'
      produces:
      - application/standard_error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: claim transactions
      tags:
      - transactions
  /v1/users:
    get:
      description: Get user ID mapped to Cognito auth user ID
      operationId: users#list
      parameters:
      - description: Cognito Auth User ID
        in: query
        name: cognitoAuthUserId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: false
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      summary: list users
      tags:
      - users
    post:
      description: Create a new user
      operationId: users#create
      parameters:
      - description: User payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UserPayload'
      produces:
      - application/standard_error+json
      - application/vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      summary: create users
      tags:
      - users
  /v1/users/{userId}:
    get:
      description: Get user by id
      operationId: users#show
      parameters:
      - description: User ID
        in: path
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      summary: show users
      tags:
      - users
  /v1/wallets:
    get:
      description: Get user wallet
      operationId: wallets#show
      parameters:
      - description: User ID
        in: query
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: false
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.wallets+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Wallets'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: show wallets
      tags:
      - wallets
    post:
      description: Update user wallet
      operationId: wallets#update
      parameters:
      - description: Wallet payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/WalletPayload'
      produces:
      - application/standard_error+json
      - application/vnd.wallet+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Wallet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: update wallets
      tags:
      - wallets
  /v1/wallets/verify:
    post:
      description: Verify signed message
      operationId: wallets#verify
      parameters:
      - description: Wallet verification payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/WalletVerificationPayload'
      produces:
      - application/standard_error+json
      - application/vnd.wallet+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Wallet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      security:
      - JWTAuth: []
      summary: verify wallets
      tags:
      - wallets
  /v1/webhooks/typeform:
    post:
      description: Typeform webhook
      operationId: webhooks#typeform
      parameters:
      - description: Typeform payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/TypeformPayload'
      produces:
      - application/standard_error+json
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      summary: typeform webhooks
      tags:
      - webhooks
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  OK:
    description: OK
    schema:
      $ref: '#/definitions/Profile'
schemes:
- http
securityDefinitions:
  JWTAuth:
    type: basic
swagger: "2.0"
