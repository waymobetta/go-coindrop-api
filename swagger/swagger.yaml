consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  Standard_error:
    description: A standard error response (default view)
    example:
      code: 400
      message: Bad Request
    properties:
      code:
        description: A code that describes the error
        example: 400
        format: int64
        type: integer
      message:
        description: A message that describes the error
        example: Bad Request
        type: string
    required:
    - code
    - message
    title: 'Mediatype identifier: application/standard_error+json; view=default'
    type: object
  Task:
    description: A task (default view)
    example:
      taskName: Eaque facere voluptates consequatur nihil odit.
    properties:
      taskName:
        description: task name
        example: Eaque facere voluptates consequatur nihil odit.
        type: string
    required:
    - taskName
    title: 'Mediatype identifier: application/vnd.task+json; view=default'
    type: object
  User:
    description: A user (default view)
    example:
      cognitoAuthUserId: Hic illum veniam magni nam perferendis.
      id: Quis ut unde aliquam voluptatibus.
      name: Aspernatur iure amet tenetur non ut.
      walletAddress: Corrupti eum fugit eaque.
    properties:
      cognitoAuthUserId:
        description: Cognito auth user ID
        example: Hic illum veniam magni nam perferendis.
        type: string
      id:
        description: Unique user ID
        example: Quis ut unde aliquam voluptatibus.
        type: string
      name:
        description: Name of user
        example: Aspernatur iure amet tenetur non ut.
        type: string
      walletAddress:
        description: Wallet address
        example: Corrupti eum fugit eaque.
        type: string
    required:
    - id
    title: 'Mediatype identifier: application/vnd.user+json; view=default'
    type: object
  UserPayload:
    description: User payload
    example:
      cognitoAuthUserId: Omnis labore.
    properties:
      cognitoAuthUserId:
        description: Cognito auth user ID
        example: Omnis labore.
        type: string
    required:
    - cognitoAuthUserId
    title: UserPayload
    type: object
  Wallet:
    description: A wallet (default view)
    example:
      walletAddress: Autem est.
    properties:
      walletAddress:
        description: wallet address
        example: Autem est.
        type: string
    required:
    - walletAddress
    title: 'Mediatype identifier: application/vnd.wallet+json; view=default'
    type: object
host: localhost:5000
info:
  description: A simple goa service
  title: The Coindrop API
  version: ""
paths:
  /v1/tasks:
    get:
      description: Get user task
      operationId: task#show
      parameters:
      - description: User ID
        in: query
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: false
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.task+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Task'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      summary: show task
      tags:
      - task
  /v1/users:
    post:
      description: Create a new user
      operationId: user#create
      parameters:
      - description: User payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UserPayload'
      produces:
      - application/standard_error+json
      - application/vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/Standard_error'
        "404":
          description: Not Found
        "410":
          description: Gone
          schema:
            $ref: '#/definitions/Standard_error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      summary: create user
      tags:
      - user
  /v1/users/{userId}:
    get:
      description: Get user by id
      operationId: user#show
      parameters:
      - description: User ID
        in: path
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: true
        type: string
      produces:
      - application/vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "404":
          description: Not Found
      schemes:
      - http
      summary: show user
      tags:
      - user
  /v1/wallets:
    get:
      description: Get user wallet
      operationId: wallet#show
      parameters:
      - description: User ID
        in: query
        name: userId
        pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-4[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$
        required: false
        type: string
      produces:
      - application/standard_error+json
      - application/vnd.wallet+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Wallet'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/Standard_error'
      schemes:
      - http
      summary: show wallet
      tags:
      - wallet
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  NotFound:
    description: Not Found
  OK:
    description: OK
    schema:
      $ref: '#/definitions/User'
schemes:
- http
swagger: "2.0"
